{"name":"Biosmalltalk","tagline":"Smalltalk Bioinformatics Library","body":"### Welcome to the BioSmalltalk project.\r\nBioSmalltalk is an open source library for doing bioinformatics with Smalltalk. BioSmalltalk enables you to build bioinformatics scripts and applications using the most powerful object technology as of today, the Smalltalk programming environment. See the installation page for details about downloading the environment. \r\n\r\nOne-liners examples:\r\n`\r\n'ATGCTAGT' asSequence.\r\n(BioSequence newDNA: 'AAGTCAGTGTACTATTAGCATGCATGTGCAACACATTAGCTG') complement.\r\n(BioMutableSeq newDNA: 'AAGTCAGTGTACTATTAGCATGCATGTGCAACACATTAGCTG') reverseComplement.\r\n(BioSequence newRNA: 'AUGGCCAUUGUAAUGGGCCGCUGAAAGGGUGCCCGAUAG') translate.\r\nBioCodonTables currentCodonTable.\r\nBioIUPACAmbiguousDNA codes.\r\nBioIUPACProtein codes\r\n`\r\n\r\n- If you want an easy to use and learn language (only 5 keywords).\r\n- If you want to explore and manipulate your objects interactively through tools created and tested since 30 years ago...\r\n- If you want to learn bioinformatics APIs while porting it to a pure object technology.\r\n- If you want to explore a class hierarchy, senders and implementors of methods, references to classes, refactor code, with just two clicks.\r\n- If you feel umcomfortable reading code in thousands of files\r\n- If you don't want to mess anymore with folder structures, search, memorize, analyze and type commands and parameters in a console.\r\n- If you don't want to visually sweep and scroll thousands of lines of code in a file.\r\n- If you want to code in the object environment created by the inventor of Object-Oriented technology.\r\n- If you want to code in an environmet which has brought us Generational garbage collection, Just-In-Time Compilation (JIT), Model-View-Controller (MVC), SUnit Testing framework, Traits, Lightweight Classes, Subjective Oriented Programming, and Method-Wrappers.\r\n\r\n### Pure objects environment\r\n\r\nA goal of BioSmalltalk is to concile the benefits of a pure object environment with bioinformatics related tasks. In BioSmalltalk life scientists or non-professional programmers may develop fast without the complexities of typical programming environments.\r\n\r\n- Computational reflection is first nature in Smalltalk.\r\n- Pure objects: No unnecessary mixing of objects with primitive data types. No need of casting required by static typing or primitive type coercion to objects.\r\n- Unique developement environment supporting source code navigation through browsers and integrated tools (Refactoring, Debugger, Introspection, Inspection, Explorers, etc.) \r\n\r\nPlease visit the [BioSmalltalk Blog](http://biosmalltalk.blogspot.com) to view usage and progress. For developers there is a Developer's Guide in the Downloads section \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}