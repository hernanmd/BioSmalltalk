testing
testGenBank02
	
	parseResult := self parserClass parseDocumentFrom: self gbSet02.
	self assert: ( parseResult isKindOf: self parserClass ).
	self deny: parseResult results isNil.
	self assert: ( parseResult results isKindOf: Collection ).
	self assert: parseResult results size = 2.
	self assert: ( parseResult results anyOne isKindOf: Dictionary ).
	self assert: ( parseResult results first at: 'GBSeq_accession-version' ) =  'FJ815864.1'.
	self assert: ( parseResult results first at: 'GBSeq_definition' ) = 'Bos taurus isolate FRI9133 D-loop, partial sequence; mitochondrial'.
	self assert: ( parseResult results first at: 'GBSeq_sequence' ) =  'acactattaatatagttccataaatacaaagagccttatcagtattaaatttatcaaaaatcccaataactcaacacagaatttgcaccctaaccaaatattacaaacaccactagctaacataacacgcccatacacagaccacagaatgaattacctacgcaaggggtaatgtacataacattaatgtaataaagacataatatgtatatagtacattaaattatatgccccatgcatataagcaagtacatgacctctatagcagtacataatacatataattattgactgtacatagtacattatgtcaaattcattcttgatagtatatctatatattccttaccattagatcacgagcttaattaccatgccgcgtgaaaccagcaacccgctaggcagggatccctcttctcgctccgggcccataaaccgtgggggtcgctatccaatgaattttaccaggcatctggttctttcttcagggccatctcatctaaaacggtccattctttcctcttaaataagacatctcgatggactaatggctaatcagcccatgctcacacataactgtgctgtcatacatttggtatttttttattttgggggatgcttggactcagctatggccgtcaaaggccctgacccggagcatctattgtagctggacttaactgcatcttgagcaccagcataatgataagcgtggacatcacagtcaatggtcacaggacataaattatattatatatccccccttcataaaaatttcccccttaaatatctaccaccacttttaacagacttttccctagatacttatttaaatttttcacgctttcaatactcaatttagcactccaaacaaagtcaatatataaacgcagggccccccccccc'.
	
	self assert: ( parseResult results second at: 'GBSeq_accession-version' ) =  'FJ815639.1'.
	self assert: ( parseResult results second at: 'GBSeq_definition' ) = 'Bos taurus isolate RG8076 D-loop, partial sequence; mitochondrial'.
	self assert: ( parseResult results second at: 'GBSeq_sequence' ) =  'acactattaatatagttccataaatacaaagagccttatcagtattaaatttatcaaaaatcccaataactcaacacagaatttgcaccctaaccaaatattacaaacaccactagctaacataacacgcccatacacagaccacagaatgaattacctacgcaaggggtaatgtacataacattaatgtaataaagacataatatgtatatagtacattaaattatatgccccatgcatataagcaagtacatgacctctatagcagtacataatacatataattattgactgtacatagtacattatgtcaaattcattcttgatagtatatctatatattccttaccattagatcacgagcttaattaccatgccgcgtgaaaccagcaacccgctaggcagggatccctcttctcgctccgggcccataaaccgtgggggtcgctatccaatgaattttaccaggcatctggttctttcttcagggccatctcatctaaaacggtccattctttcctcttaaataagacatctcgatggactaatggctaatcagcccatgctcacacataactgtgctgtcatacatttggtatttttttattttgggggatgcttggactcagctatggccgtcaaaggccctgacccggagcatctattgtagctggacttaactgcatcttgagcaccagcataatgataagcgtggacattacagtcaatggtcacaggacataaattatattatatatcccccccttcataaaaatttcccccttaaatatctaccaccacttttaacagacttttccctagatacttatttaaatttttcacgctttcaatactcaatttagcactccaaacaaagtcaatatataaacgcagggccccccccccc'.
	